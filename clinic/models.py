from django.db import models
from datetime import date
import os

class Patient(models.Model):
    name = models.CharField(max_length=255)
    phone = models.CharField(max_length=15, unique=True)
    age = models.PositiveIntegerField(default=18)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.name

def patient_image_upload_path(instance, filename):
    """ ุญูุธ ุงูุตูุฑ ุจุงุณู ุงููุฑูุถ ุฏุงุฎู ูุฌูุฏ 'treatments/' """
    ext = filename.split('.')[-1]  # ุงุณุชุฎุฑุงุฌ ุงูุชุฏุงุฏ ุงูุตูุฑุฉ
    filename = f"{instance.patient.name.replace(' ', '_')}.{ext}"  # ุญูุธ ุจุงุณู ุงููุฑูุถ
    return os.path.join('treatments/', filename)

class Treatment(models.Model):
    TOOTH_CHOICES = [
    # ุงููู ุงูุนููู (Maxillary)
    ('UR8', 'ุถุฑุณ ุงูุนูู ุงูุนููู ุงูุฃููู (UR8)'),
    ('UR7', 'ุงูุถุฑุณ ุงูุซุงูู ุงูุนููู ุงูุฃููู (UR7)'),
    ('UR6', 'ุงูุถุฑุณ ุงูุฃูู ุงูุนููู ุงูุฃููู (UR6)'),
    ('UR5', 'ุงููุงุจ ุงูุซุงูู ุงูุนููู ุงูุฃููู (UR5)'),
    ('UR4', 'ุงููุงุจ ุงูุฃูู ุงูุนููู ุงูุฃููู (UR4)'),
    ('UR3', 'ุงูุฑุจุงุนูุฉ ุงูุนูููุฉ ุงููููู (UR3)'),
    ('UR2', 'ุงูุซููุฉ ุงูุนูููุฉ ุงููููู (UR2)'),
    ('UR1', 'ุงูุซููุฉ ุงููุฑูุฒูุฉ ุงูุนูููุฉ ุงููููู (UR1)'),
    ('UL1', 'ุงูุซููุฉ ุงููุฑูุฒูุฉ ุงูุนูููุฉ ุงููุณุฑู (UL1)'),
    ('UL2', 'ุงูุซููุฉ ุงูุนูููุฉ ุงููุณุฑู (UL2)'),
    ('UL3', 'ุงูุฑุจุงุนูุฉ ุงูุนูููุฉ ุงููุณุฑู (UL3)'),
    ('UL4', 'ุงููุงุจ ุงูุฃูู ุงูุนููู ุงูุฃูุณุฑ (UL4)'),
    ('UL5', 'ุงููุงุจ ุงูุซุงูู ุงูุนููู ุงูุฃูุณุฑ (UL5)'),
    ('UL6', 'ุงูุถุฑุณ ุงูุฃูู ุงูุนููู ุงูุฃูุณุฑ (UL6)'),
    ('UL7', 'ุงูุถุฑุณ ุงูุซุงูู ุงูุนููู ุงูุฃูุณุฑ (UL7)'),
    ('UL8', 'ุถุฑุณ ุงูุนูู ุงูุนููู ุงูุฃูุณุฑ (UL8)'),
    
    # ุงููู ุงูุณููู (Mandibular)
    ('LR8', 'ุถุฑุณ ุงูุนูู ุงูุณููู ุงูุฃููู (LR8)'),
    ('LR7', 'ุงูุถุฑุณ ุงูุซุงูู ุงูุณููู ุงูุฃููู (LR7)'),
    ('LR6', 'ุงูุถุฑุณ ุงูุฃูู ุงูุณููู ุงูุฃููู (LR6)'),
    ('LR5', 'ุงููุงุจ ุงูุซุงูู ุงูุณููู ุงูุฃููู (LR5)'),
    ('LR4', 'ุงููุงุจ ุงูุฃูู ุงูุณููู ุงูุฃููู (LR4)'),
    ('LR3', 'ุงูุฑุจุงุนูุฉ ุงูุณูููุฉ ุงููููู (LR3)'),
    ('LR2', 'ุงูุซููุฉ ุงูุณูููุฉ ุงููููู (LR2)'),
    ('LR1', 'ุงูุซููุฉ ุงููุฑูุฒูุฉ ุงูุณูููุฉ ุงููููู (LR1)'),
    ('LL1', 'ุงูุซููุฉ ุงููุฑูุฒูุฉ ุงูุณูููุฉ ุงููุณุฑู (LL1)'),
    ('LL2', 'ุงูุซููุฉ ุงูุณูููุฉ ุงููุณุฑู (LL2)'),
    ('LL3', 'ุงูุฑุจุงุนูุฉ ุงูุณูููุฉ ุงููุณุฑู (LL3)'),
    ('LL4', 'ุงููุงุจ ุงูุฃูู ุงูุณููู ุงูุฃูุณุฑ (LL4)'),
    ('LL5', 'ุงููุงุจ ุงูุซุงูู ุงูุณููู ุงูุฃูุณุฑ (LL5)'),
    ('LL6', 'ุงูุถุฑุณ ุงูุฃูู ุงูุณููู ุงูุฃูุณุฑ (LL6)'),
    ('LL7', 'ุงูุถุฑุณ ุงูุซุงูู ุงูุณููู ุงูุฃูุณุฑ (LL7)'),
    ('LL8', 'ุถุฑุณ ุงูุนูู ุงูุณููู ุงูุฃูุณุฑ (LL8)'),
]
    TREATMENT_CHOICES = [
        ('ุญุดูู ูููุชุฉ', 'ุญุดูุฉ ูููุชุฉ'),
        ('ุญุดูู ุฏุงุฆูู', 'ุญุดูุฉ ุฏุงุฆูุฉ'),
        ('ููุน', 'ููุน'),
        ('ุฒุฑุงุนุฉ', 'ุฒุฑุงุนุฉ'),
        ('ุฌุฐุฑ', 'ุฌุฐุฑ'),
        
    ]  # ุงูุฎูุงุฑุงุช ุงููุชุงุญุฉ

    patient = models.ForeignKey(Patient, on_delete=models.CASCADE, related_name="treatments")
    treatment_date = models.DateField(default=date.today)
    treatment_type = models.CharField(max_length=20, choices=TREATMENT_CHOICES)  # ุญูู ููุน ุงูุญุงูุฉ
    tooth_number = models.CharField(max_length=3, choices=TOOTH_CHOICES)  # ุญูู ุฑูู ุงูุณู
    amount_paid = models.PositiveBigIntegerField(null=False, blank=True)
    first_installment = models.PositiveBigIntegerField( null=False, blank=True)
    image = models.ImageField(upload_to=patient_image_upload_path, blank=True, null=True)  # ๐ฅ ุฅุถุงูุฉ ุงูุตูุฑุฉ
    note = models.TextField(blank=True, null=True)
    remaining_amount = models.PositiveBigIntegerField(default=0, null=False, blank=True)
  
    

    
    def save(self, *args, **kwargs):
        if self.first_installment is None:
            self.first_installment = 0
        if self.amount_paid is None:
            self.amount_paid = 0
        
        self.remaining_amount = max(self.amount_paid - self.first_installment, 0)
        super().save(*args, **kwargs)
    def __str__(self):
        return f"ุญุงูุฉ {self.patient.name} - {self.get_treatment_type_display()} ูู {self.date}"

